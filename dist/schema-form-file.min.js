/**
 * angular-schema-form-nwp-file-upload - Upload file type for Angular Schema Form
 * @version v0.1.5
 * @link https://github.com/saburab/angular-schema-form-nwp-file-upload
 * @license MIT
 */
"use strict";angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,r,i){var a="Wrong file type. Allowed types are ",n="This file is too large. Maximum size allowed is ",l="Current file size:",t="You have to upload at least one file",s="You can't upload more than one file.",o=1e4,m=function(r,m,d){if("array"===m.type&&"singlefile"===m.format){m.pattern&&m.pattern.mimeType&&!m.pattern.validationMessage&&(m.pattern.validationMessage=a),m.maxSize&&m.maxSize.maximum&&!m.maxSize.validationMessage&&(m.maxSize.validationMessage=n,m.maxSize.validationMessage2=l),m.minItems&&m.minItems.minimum&&!m.minItems.validationMessage&&(m.minItems.validationMessage=t),m.maxItems&&m.maxItems.maximum&&!m.maxItems.validationMessage&&(m.maxItems.validationMessage=s),(angular.isUndefined(m.chunkedFileSize)||null==m.chunkedFileSize)&&(m.chunkedFileSize=o);var p=e.stdFormObj(r,m,d);return p.key=d.path,p.type="nwpFileUpload",d.lookup[i.stringify(d.path)]=p,p}};e.defaults.array.unshift(m);var d=function(r,m,d){if("array"===m.type&&"multifile"===m.format){m.pattern&&m.pattern.mimeType&&!m.pattern.validationMessage&&(m.pattern.validationMessage=a),m.maxSize&&m.maxSize.maximum&&!m.maxSize.validationMessage&&(m.maxSize.validationMessage=n,m.maxSize.validationMessage2=l),m.minItems&&m.minItems.minimum&&!m.minItems.validationMessage&&(m.minItems.validationMessage=t),m.maxItems&&m.maxItems.maximum&&!m.maxItems.validationMessage&&(m.maxItems.validationMessage=s),(angular.isUndefined(m.chunkedFileSize)||null==m.chunkedFileSize)&&(m.chunkedFileSize=o);var p=e.stdFormObj(r,m,d);return p.key=d.path,p.type="nwpFileUpload",d.lookup[i.stringify(d.path)]=p,p}};e.defaults.array.unshift(d),r.addMapping("bootstrapDecorator","nwpFileUpload","directives/decorators/bootstrap/nwp-file/nwp-file.html")}]),angular.module("ngSchemaFormFile",["ngFileUpload","ngMessages","SSATB.LocalForage"]).directive("ngSchemaFile",["Upload","$timeout","$q","$localForage","ssatbHttp",function(e,r,i,a,n){return{restrict:"A",scope:!0,require:"ngModel",link:function(i,l,t,s){function o(e){for(var r in e){var i=e[r].ServiceName;if(null!=i&&"ssatb.fileservice"==i.toLowerCase().trim())return e[r]}return null}function m(e){var r=i.apiInfo,a=r.Url+"/api/v1/storageDomains/"+i.storageDomain+"/files/"+e;return n.get(a).then(function(e){return e})}function d(e){return m(e).then(function(e){e.name=e.properties.contentDisposition,0==e.name.indexOf("filename=")&&(e.name=e.name.substring(9)),i.uploadedFiles.push(e)})}function p(e){i.selectFile(e);var r=i.apiInfo;if(e&&!e.$error&&r&&i.storageDomain){var a=r.Url+"/api/v1/storageDomains/"+i.storageDomain+"/files",l={file:e};if(null!=i.metaData)for(var t in i.metaData)l["x-file-metadata-"+t]=i.metaData[t];var s={url:a,data:l,headers:r.Headers};if(e.size>i.form.schema.chunkedFileSize){var o=r.Url+"/api/v1/storageDomains/"+i.storageDomain+"/chunked/files";n.post(o,{"Content-Type":e.type,"Content-Disposition":'filename="'+e.name+'"'}).then(function(r){var a=r.response;s.resumeSizeUrl=o+"/"+a,s.url=o+"/"+a,s.resumeChunkSize=i.form.schema.chunkedFileSize,s.resumeSizeResponseReader=function(e){return e.properties.contentLength},c(e,s,a),e.upload.progress(function(r){e.progress=Math.min(100,parseInt(100*r.loaded/r.total))})})}else c(e,s),e.upload.progress(function(r){e.progress=Math.min(100,parseInt(100*r.loaded/r.total))})}}function c(a,n,l){a.upload=e.upload(n),i.fileUploading=!0,a.upload.then(function(e){r(function(){a.result=e.data});var n=s.$modelValue;angular.isDefined(n)||(n=[]),angular.isUndefined(l)&&(l=e.data),n.push(l),s.$setViewValue(n),s.$commitViewValue(),d(l).then(function(){i.fileUploading=!1})},function(e){e.status>0&&(i.errorMsg=e.status+": "+e.data)})}i.storageDomain=i.form&&i.form.storageDomain,i.metaData=i.form&&i.form.metaData,i.uploadedFiles=[],i.apiInfo=o(a._localforage._config.apiInfo),i.isSinglefileUpload=i.form&&i.form.schema&&"singlefile"===i.form.schema.format,i.uploadOnFileSelect=i.form&&i.form.uploadOnFileSelect,i.fileUploading=!1,s.$render=function(){null!=s.$modelValue&&angular.forEach(s.$modelValue,function(e,r){d(e)})},i.selectFile=function(e){i.picFile=e},i.selectFiles=function(e){i.picFiles=e},i.uploadFile=function(e){e&&p(e)},i.uploadFiles=function(e){e.length&&angular.forEach(e,function(e){p(e)})},i.deleteFile=function(e){var r=i.apiInfo,a=r.Url+"/api/v1/storageDomains/"+i.storageDomain+"/files/"+e.fileId;n["delete"](a).then(function(){var r=i.uploadedFiles.indexOf(e);i.uploadedFiles.splice(r,1)})},i.validateField=function(){i.uploadForm.file&&i.uploadForm.file.$valid&&i.picFile&&!i.picFile.$error?console.log("singlefile-form is invalid"):i.uploadForm.files&&i.uploadForm.files.$valid&&i.picFiles&&!i.picFiles.$error?console.log("multifile-form is  invalid"):console.log("single- and multifile-form are valid")},i.submit=function(){i.uploadForm.file&&i.uploadForm.file.$valid&&i.picFile&&!i.picFile.$error?i.uploadFile(i.picFile):i.uploadForm.files&&i.uploadForm.files.$valid&&i.picFiles&&!i.picFiles.$error&&i.uploadFiles(i.picFiles)},i.$on("schemaFormValidate",i.validateField),i.$on("schemaFormFileUploadSubmit",i.submit)}}}]),angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/nwp-file/nwp-file.html",'<ng-form class="file-upload mb-lg" ng-schema-file ng-model="$$value$$" name="uploadForm">\r\n   <label ng-show="form.title && form.notitle !== true" class="control-label" for="fileInputButton" ng-class="{\'sr-only\': !showTitle(), \'text-danger\': uploadForm.$error.required && !uploadForm.$pristine}">\r\n      {{ form.title }}<i ng-show="form.required">&nbsp;*</i>\r\n   </label>\r\n    <div ng-hide="uploadOnFileSelect">\r\n        <div ng-show="picFile">\r\n            <div ng-include="\'uploadProcess.html\'" class="mb"></div>\r\n        </div>\r\n\r\n        <ul ng-show="picFiles && picFiles.length" class="list-group">\r\n            <li class="list-group-item" ng-repeat="picFile in picFiles">\r\n                <div ng-include="\'uploadProcess.html\'"></div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n   <div class="bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\r\n      <small class="text-muted" ng-show="form.description" ng-bind-html="form.description"></small>\r\n       <div ng-if="isSinglefileUpload" ng-include src="form.templateUrlFileUpload ? form.templateUrlFileUpload : \'singleFileUpload.html\'"></div>\r\n       <div ng-if="!isSinglefileUpload" ng-include="form.templateUrlFileUpload ? form.templateUrlFileUpload : \'multiFileUpload.html\'"></div>\r\n      <div class="help-block mb0" ng-show="uploadForm.$error.required && !uploadForm.$pristine">{{ \'modules.attribute.fields.required.caption\' | translate }}</div>\r\n      <div class="help-block mb0" ng-show="(hasError() && errorMessage(schemaError()))" ng-bind-html="(hasError() && errorMessage(schemaError()))"></div>\r\n   </div>\r\n</ng-form>\r\n\r\n<script type=\'text/ng-template\' id="uploadProcess.html">\r\n    <div class="row mb">\r\n        <div class="col-sm-4 mb-sm">\r\n            <label title="{{ \'modules.upload.field.preview\' | translate }}" class="text-info">\r\n                {{\r\n            \'modules.upload.field.preview\' | translate\r\n                }}\r\n            </label>\r\n            <img ngf-src="picFile" class="img-thumbnail img-responsive">\r\n            <div class="img-placeholder"\r\n                 ng-class="{\'show\': picFile.$invalid && !picFile.blobUrl, \'hide\': !picFile || picFile.blobUrl}">\r\n                No preview\r\n                available\r\n            </div>\r\n        </div>\r\n        <div class="col-sm-4 mb-sm">\r\n            <label title="{{ \'modules.upload.field.filename\' | translate }}" class="text-info">\r\n                {{\r\n            \'modules.upload.field.filename\' | translate\r\n                }}\r\n            </label>\r\n            <div class="filename" title="{{ picFile.name }}">{{ picFile.name }}</div>\r\n        </div>\r\n        <div class="col-sm-4 mb-sm">\r\n            <label title="{{ \'modules.upload.field.progress\' | translate }}" class="text-info">\r\n                {{\r\n            \'modules.upload.field.progress\' | translate\r\n                }}\r\n            </label>\r\n            <div class="progress">\r\n                <div class="progress-bar progress-bar-striped" role="progressbar"\r\n                     ng-class="{\'progress-bar-success\': picFile.progress == 100}"\r\n                     ng-style="{width: picFile.progress + \'%\'}">\r\n                    {{ picFile.progress }} %\r\n                </div>\r\n            </div>\r\n            <button class="btn btn-primary btn-sm" type="button" ng-click="uploadFile(picFile)"\r\n                    ng-disabled="!picFile || picFile.$error">\r\n                {{ "buttons.upload" | translate }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div ng-messages="uploadForm.$error" ng-messages-multiple="">\r\n        <div class="text-danger errorMsg" ng-message="maxSize">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong>. ({{ form.schema[picFile.$error].validationMessage2 | translate }} <strong>{{picFile.size / 1000000|number:1}}MB</strong>)</div>\r\n        <div class="text-danger errorMsg" ng-message="pattern">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div>\r\n        <div class="text-danger errorMsg" ng-message="maxItems">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div>\r\n        <div class="text-danger errorMsg" ng-message="minItems">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div>\r\n        <div class="text-danger errorMsg" ng-show="errorMsg">{{errorMsg}}</div>\r\n    </div>\r\n</script>\r\n\r\n<script type=\'text/ng-template\' id="singleFileUpload.html">\r\n   <div ngf-drop="selectFile(picFile)" ngf-select="selectFile(picFile)" type="file" ngf-multiple="false"\r\n        ng-model="picFile" name="file"\r\n        ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}"\r\n        ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}"\r\n        ng-required="form.required"\r\n        accept="{{form.schema.pattern && form.schema.pattern.mimeType}}"\r\n        ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\r\n      <p class="text-center">{{ \'modules.upload.descriptionSinglefile\' | translate }}</p>\r\n   </div>\r\n   <div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\r\n\r\n   <button ngf-select="selectFile(picFile)" type="file" ngf-multiple="false" ng-model="picFile" name="file"\r\n           ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}"\r\n           ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}"\r\n           ng-required="form.required"\r\n           accept="{{form.schema.pattern && form.schema.pattern.mimeType}}"\r\n           ng-model-options="form.ngModelOptions" id="fileInputButton"\r\n           class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\r\n      <fa fw="fw" name="upload" class="mr-sm"></fa>\r\n      {{ "buttons.add" | translate }}\r\n   </button>\r\n</script>\r\n\r\n<script type=\'text/ng-template\' id="multiFileUpload.html">\r\n   <div ngf-drop="selectFiles(picFiles)" ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true"\r\n        ng-model="picFiles" name="files"\r\n        ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}"\r\n        ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}"\r\n        ng-required="form.required"\r\n        accept="{{form.schema.pattern && form.schema.pattern.mimeType}}"\r\n        ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\r\n      <p class="text-center">{{ \'modules.upload.descriptionMultifile\' | translate }}</p>\r\n   </div>\r\n   <div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\r\n\r\n   <button ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true" multiple ng-model="picFiles" name="files"\r\n           accept="{{form.schema.pattern && form.schema.pattern.mimeType}}"\r\n           ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}"\r\n           ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}"\r\n           ng-required="form.required"\r\n           ng-model-options="form.ngModelOptions" id="fileInputButton"\r\n           class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\r\n      <fa fw="fw" name="upload" class="mr-sm"></fa>\r\n      {{ "buttons.add" | translate }}\r\n   </button>\r\n</script>\r\n')}]);