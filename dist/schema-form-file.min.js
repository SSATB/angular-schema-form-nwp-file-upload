"use strict";angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider","sfBuilderProvider",function(e,a,i,r){var l="Wrong file type. Allowed types are ",s="This file is too large. Maximum size allowed is ",t="Current file size:",o="You have to upload at least one file",n="You can't upload more than one file.",m=2e6,d=function(a,r,d){if("array"===r.type&&"singlefile"===r.format){r.pattern&&r.pattern.mimeType&&!r.pattern.validationMessage&&(r.pattern.validationMessage=l),r.maxSize&&r.maxSize.maximum&&!r.maxSize.validationMessage&&(r.maxSize.validationMessage=s,r.maxSize.validationMessage2=t),r.minItems&&r.minItems.minimum&&!r.minItems.validationMessage&&(r.minItems.validationMessage=o),r.maxItems&&r.maxItems.maximum&&!r.maxItems.validationMessage&&(r.maxItems.validationMessage=n),(angular.isUndefined(r.chunkedFileSize)||null==r.chunkedFileSize)&&(r.chunkedFileSize=m);var p=e.stdFormObj(a,r,d);return p.key=d.path,p.type="nwpFileUpload",d.lookup[i.stringify(d.path)]=p,p}};e.defaults.array.unshift(d);var p=function(a,r,d){if("array"===r.type&&"multifile"===r.format){r.pattern&&r.pattern.mimeType&&!r.pattern.validationMessage&&(r.pattern.validationMessage=l),r.maxSize&&r.maxSize.maximum&&!r.maxSize.validationMessage&&(r.maxSize.validationMessage=s,r.maxSize.validationMessage2=t),r.minItems&&r.minItems.minimum&&!r.minItems.validationMessage&&(r.minItems.validationMessage=o),r.maxItems&&r.maxItems.maximum&&!r.maxItems.validationMessage&&(r.maxItems.validationMessage=n),(angular.isUndefined(r.chunkedFileSize)||null==r.chunkedFileSize)&&(r.chunkedFileSize=m);var p=e.stdFormObj(a,r,d);return p.key=d.path,p.type="nwpFileUpload",d.lookup[i.stringify(d.path)]=p,p}};e.defaults.array.unshift(p),a.addMapping("bootstrapDecorator","nwpFileUpload","directives/decorators/bootstrap/nwp-file/nwp-file.html");var c=r.stdBuilders;a.defineAddOn("bootstrapDecorator","nwpFileUpload","directives/decorators/bootstrap/nwp-file/nwp-file.html",c)}]),angular.module("ngSchemaFormFile",["ngFileUpload","ngMessages","SSATB.LocalForage"]).directive("ngSchemaFile",["Upload","$timeout","$q","$localForage","ssatbHttp",function(e,a,i,r,l){return{restrict:"A",scope:!0,require:"ngModel",link:function(i,s,t,o){function n(e){for(var a in e){var i=e[a].ServiceName;if(null!=i&&"ssatb.fileservice"==i.toLowerCase().trim())return e[a]}return null}function m(e){var a=i.apiInfo,r=a.Url+"/api/v1/storageDomains/"+i.storageDomain+"/files/"+e;return l.get(r).then(function(e){return e})}function d(e){return m(e).then(function(e){e.name=e.properties.fileName,i.uploadedFiles.push(e)})}function p(e){i.selectFile(e);var a=i.apiInfo;if(e&&!e.$error&&a&&i.storageDomain){var r=a.Url+"/api/v1/storageDomains/"+i.storageDomain+"/files",s={file:e};if(null!=i.metaData)for(var t in i.metaData)s["x-file-metadata-"+t]=i.metaData[t];var o={url:r,data:s,headers:a.Headers};if(e.size>i.form.schema.chunkedFileSize){var n=a.Url+"/api/v1/storageDomains/"+i.storageDomain+"/chunked/files",m={"Content-Type":e.type,"Content-Disposition":'filename="'+e.name+'"'};if(null!=i.metaData)for(var t in i.metaData)m[t]=i.metaData[t];l.post(n,m).then(function(a){var r=a.response;o.resumeSizeUrl=n+"/"+r,o.url=n+"/"+r,o.resumeChunkSize=i.form.schema.chunkedFileSize,o.resumeSizeResponseReader=function(e){return e.properties.contentLength},c(e,o,r),e.upload.progress(function(a){e.progress=Math.min(100,parseInt(100*a.loaded/a.total))})})}else c(e,o),e.upload.progress(function(a){e.progress=Math.min(100,parseInt(100*a.loaded/a.total))})}}function c(r,l,s){r.upload=e.upload(l),i.fileUploading=!0,r.upload.then(function(e){a(function(){r.result=e.data}),(angular.isUndefined(o.$modelValue)||null==o.$modelValue)&&o.$setViewValue([]);var l=o.$modelValue;angular.isUndefined(s)&&(s=e.data),l.push(s),o.$setViewValue(l),o.$commitViewValue(),d(s).then(function(){i.fileUploading=!1})},function(e){e.status>0&&e.data?i.errorMsg=e.data:i.errorMsg="Errors uploading your file",r.upload.abort(),i.fileUploading=!1,r.progress=0})}i.storageDomain=i.form&&i.form.storageDomain,i.metaData=i.form&&i.form.metaData,i.uploadedFiles=[],i.apiInfo=n(r._localforage._config.apiInfo),i.isSinglefileUpload=i.form&&i.form.schema&&"singlefile"===i.form.schema.format,i.uploadOnFileSelect=i.form&&i.form.uploadOnFileSelect,i.fileUploading=!1,o.$render=function(){null!=o.$modelValue&&(i.uploadedFiles=[],angular.forEach(o.$modelValue,function(e,a){d(e)}))},i.selectFile=function(e){i.errorMsg="",i.picFile=e},i.selectFiles=function(e){i.picFiles=e},i.uploadFile=function(e){e&&p(e)},i.uploadFiles=function(e){e.length&&angular.forEach(e,function(e){p(e)})},i.deleteFile=function(e){var a=(i.apiInfo,i.uploadedFiles.indexOf(e));i.uploadedFiles.splice(a,1);var r=o.$modelValue,l=r.indexOf(e.fileId);l!=-1&&(r.splice(l,1),o.$setViewValue(r),o.$commitViewValue())},i.validateField=function(){i.uploadForm.file&&i.uploadForm.file.$valid&&i.picFile&&!i.picFile.$error?console.log("singlefile-form is invalid"):i.uploadForm.files&&i.uploadForm.files.$valid&&i.picFiles&&!i.picFiles.$error?console.log("multifile-form is  invalid"):console.log("single- and multifile-form are valid")},i.submit=function(){i.uploadForm.file&&i.uploadForm.file.$valid&&i.picFile&&!i.picFile.$error?i.uploadFile(i.picFile):i.uploadForm.files&&i.uploadForm.files.$valid&&i.picFiles&&!i.picFiles.$error&&i.uploadFiles(i.picFiles)},i.$on("schemaFormValidate",i.validateField),i.$on("schemaFormFileUploadSubmit",i.submit)}}}]),function(e){try{e=angular.module("schemaForm")}catch(a){e=angular.module("schemaForm",[])}e.run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/nwp-file/nwp-file.html",'<ng-form class="file-upload mb-lg" ng-schema-file="" ng-model="$$value$$" sf-field-model="" sf-changed="uploadForm" schema-validate="uploadForm" name="uploadForm"><label ng-show="form.title && form.notitle !== true" class="control-label" for="fileInputButton" ng-class="{\'sr-only\': !showTitle(), \'text-danger\': uploadForm.$error.required && !uploadForm.$pristine}">{{ form.title }}<i ng-show="form.required">&nbsp;*</i></label><div ng-hide="uploadOnFileSelect"><div ng-show="picFile"><div ng-include="\'uploadProcess.html\'" class="mb"></div></div><ul ng-show="picFiles && picFiles.length" class="list-group"><li class="list-group-item" ng-repeat="picFile in picFiles"><div ng-include="\'uploadProcess.html\'"></div></li></ul></div><div class="bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}"><small class="text-muted" ng-show="form.description" ng-bind-html="form.description"></small><div ng-if="isSinglefileUpload" ng-include="" src="form.templateUrlFileUpload ? form.templateUrlFileUpload : \'singleFileUpload.html\'"></div><div ng-if="!isSinglefileUpload" ng-include="form.templateUrlFileUpload ? form.templateUrlFileUpload : \'multiFileUpload.html\'"></div><div class="help-block mb0" ng-show="uploadForm.$error.required && !uploadForm.$pristine">{{ \'modules.attribute.fields.required.caption\' | translate }}</div><div class="help-block mb0" ng-show="(hasError() && errorMessage(schemaError()))" ng-bind-html="(hasError() && errorMessage(schemaError()))"></div></div></ng-form><script type="text/ng-template" id="partials/simpleFileUpload.html"><div class="row"> <div class="col-sm-2 {{ uploadedFiles.length >= form.schema.maxItems.maximum ? \'attachment-button-disabled\' : \'attachment-button\' }}" title="{{ uploadedFiles.length >= form.schema.maxItems.maximum && form.schema.maxItems.warningMessage ? form.schema.maxItems.warningMessage : \'\' }}"> <a href ngf-select="uploadFile(picFile)" type="file" ngf-multiple="false" ng-model="picFile" name="file" ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}" ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}" ng-required="form.required" accept="{{form.schema.pattern && form.schema.pattern.mimeType}}" ng-model-options="form.ngModelOptions" id="fileInputlink" class="ui icon"> <span style="padding-top:0px; margin-top:0px;" class="ion-paperclip"></span> </a> </div> <div class="col-sm-4 uploaded-files"> <div class="{{form.htmlClassUploadedFiles}}" ng-repeat="uploadedFile in uploadedFiles"> <a href="{{ uploadedFile.downloadUrl }}" download>{{ uploadedFile.name }}</a> <a href> <span ng-click="deleteFile(uploadedFile)" class="glyphicon glyphicon-remove"></span> </a> </div> </div> <div ng-show="fileUploading" class="col-sm-4 mb-sm"> <div class="filename" title="{{ picFile.name }}">{{ picFile.name }}</div> </div> <div ng-show="fileUploading" class="col-sm-4 mb-sm"> <div class="progress"> <div class="progress-bar progress-bar-striped" role="progressbar" ng-class="{\'progress-bar-success\': picFile.progress == 100}" ng-style="{width: picFile.progress + \'%\'}"> {{ picFile.progress }} % </div> </div> </div> <div ng-messages="uploadForm.$error" ng-messages-multiple=""> <div class="text-danger errorMsg" ng-message="maxSize">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong>. ({{ form.schema[picFile.$error].validationMessage2 | translate }} <strong>{{picFile.size / 1000000|number:1}}MB</strong>)</div> <div class="text-danger errorMsg" ng-message="pattern">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div> <div class="text-danger errorMsg" ng-message="maxItems">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div> <div class="text-danger errorMsg" ng-message="minItems">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div> <div class="text-danger errorMsg" ng-show="errorMsg">{{errorMsg}}</div> </div> </div></script><script type="text/ng-template" id="uploadProcess.html"><div class="row mb"> <div class="col-sm-4 mb-sm"> <label title="{{ \'modules.upload.field.preview\' | translate }}" class="text-info"> {{ \'modules.upload.field.preview\' | translate }} </label> <img ngf-src="picFile" class="img-thumbnail img-responsive"> <div class="img-placeholder" ng-class="{\'show\': picFile.$invalid && !picFile.blobUrl, \'hide\': !picFile || picFile.blobUrl}"> No preview available </div> </div> <div class="col-sm-4 mb-sm"> <label title="{{ \'modules.upload.field.filename\' | translate }}" class="text-info"> {{ \'modules.upload.field.filename\' | translate }} </label> <div class="filename" title="{{ picFile.name }}">{{ picFile.name }}</div> </div> <div class="col-sm-4 mb-sm"> <label title="{{ \'modules.upload.field.progress\' | translate }}" class="text-info"> {{ \'modules.upload.field.progress\' | translate }} </label> <div class="progress"> <div class="progress-bar progress-bar-striped" role="progressbar" ng-class="{\'progress-bar-success\': picFile.progress == 100}" ng-style="{width: picFile.progress + \'%\'}"> {{ picFile.progress }} % </div> </div> <button class="btn btn-primary btn-sm" type="button" ng-click="uploadFile(picFile)" ng-disabled="!picFile || picFile.$error"> {{ "buttons.upload" | translate }} </button> </div> </div> <div ng-messages="uploadForm.$error" ng-messages-multiple=""> <div class="text-danger errorMsg" ng-message="maxSize">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong>. ({{ form.schema[picFile.$error].validationMessage2 | translate }} <strong>{{picFile.size / 1000000|number:1}}MB</strong>)</div> <div class="text-danger errorMsg" ng-message="pattern">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div> <div class="text-danger errorMsg" ng-message="maxItems">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div> <div class="text-danger errorMsg" ng-message="minItems">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div> <div class="text-danger errorMsg" ng-show="errorMsg">{{errorMsg}}</div> </div></script><script type="text/ng-template" id="singleFileUpload.html"><div ngf-drop="selectFile(picFile)" ngf-select="selectFile(picFile)" type="file" ngf-multiple="false" ng-model="picFile" name="file" ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}" ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}" ng-required="form.required" accept="{{form.schema.pattern && form.schema.pattern.mimeType}}" ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription"> <p class="text-center">{{ \'modules.upload.descriptionSinglefile\' | translate }}</p> </div> <div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div> <button ngf-select="selectFile(picFile)" type="file" ngf-multiple="false" ng-model="picFile" name="file" ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}" ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}" ng-required="form.required" accept="{{form.schema.pattern && form.schema.pattern.mimeType}}" ng-model-options="form.ngModelOptions" id="fileInputButton" class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb"> <fa fw="fw" name="upload" class="mr-sm"></fa> {{ "buttons.add" | translate }} </button></script><script type="text/ng-template" id="multiFileUpload.html"><div ngf-drop="selectFiles(picFiles)" ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true" ng-model="picFiles" name="files" ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}" ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}" ng-required="form.required" accept="{{form.schema.pattern && form.schema.pattern.mimeType}}" ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription"> <p class="text-center">{{ \'modules.upload.descriptionMultifile\' | translate }}</p> </div> <div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div> <button ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true" multiple ng-model="picFiles" name="files" accept="{{form.schema.pattern && form.schema.pattern.mimeType}}" ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}" ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}" ng-required="form.required" ng-model-options="form.ngModelOptions" id="fileInputButton" class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb"> <fa fw="fw" name="upload" class="mr-sm"></fa> {{ "buttons.add" | translate }} </button></script>')}])}();